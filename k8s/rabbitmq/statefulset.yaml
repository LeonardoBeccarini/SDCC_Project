apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbitmq
  labels:
    app: rabbitmq
spec:
  serviceName: rabbitmq-headless
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      subdomain: rabbitmq-headless
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 999
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: rabbitmq
                topologyKey: kubernetes.io/hostname
      containers:
        - name: rabbitmq
          image: rabbitmq:3.13-management
          imagePullPolicy: IfNotPresent
          ports:
            - { name: amqp, containerPort: 5672 }
            - { name: mgmt, containerPort: 15672 }
            - { name: mqtt, containerPort: 1883 }
          env:
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: RABBITMQ_DEFAULT_PASS
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-erlang-cookie
                  key: RABBITMQ_ERLANG_COOKIE
          volumeMounts:
            - name: rabbitmq-config
              mountPath: /etc/rabbitmq
            - name: data
              mountPath: /var/lib/rabbitmq
          livenessProbe:
            tcpSocket: { port: 5672 }
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            tcpSocket: { port: 5672 }
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "1",    memory: "1Gi" }
      volumes:
        - name: rabbitmq-config
          configMap:
            name: rabbitmq-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
