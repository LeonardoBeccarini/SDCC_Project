apiVersion: apps/v1
kind: Deployment
metadata:
  name: irrigation-controller
  namespace: fog
spec:
  replicas: 1
  selector:
    matchLabels: { app: irrigation-controller }
  template:
    metadata:
      labels: { app: irrigation-controller }
    spec:
      nodeSelector: { role: fog }

      initContainers:
        - name: netem
          image: alpine:3.20
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          env:
            - { name: DELAY,  value: "20ms" }
            - { name: JITTER, value: "6ms" }
          command: ["sh","-c"]
          args:
            - >
              apk add --no-cache iproute2 &&
              tc qdisc del dev eth0 root 2>/dev/null || true &&
              tc qdisc add dev eth0 root netem delay ${DELAY} ${JITTER} distribution normal &&
              tc qdisc show dev eth0

      containers:
        - name: irrigation-controller
          image: sdcc/irrigation-controller:local
          imagePullPolicy: IfNotPresent

          envFrom:
            - configMapRef: { name: mqtt-common }
            - secretRef:    { name: mqtt-credentials }

          env:
            - { name: HOSTNAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }

            # Topic
            - { name: AGGREGATED_SUB_TOPIC,           value: "sensor/aggregated/#" }
            - { name: IRRIGATION_RESULT_SUB,          value: "event/irrigationResult/#" }

            # Router gRPC per field -> device-service
            - { name: DEVICE_GRPC_ADDR_MAP, value: "field_1=device-svc-field1.edge.svc.cluster.local:50051,field_2=device-svc-field2.edge.svc.cluster.local:50051" }

            # Config sensori
            - { name: SENSORS_CONFIG_PATH, value: "/app/config/sensors-config.json" }

            # Parametri irrigazione
            - { name: MOISTURE_GUARDS,  value: "35" }
            - { name: DAILY_BASE_MM,    value: "5.0" }
            - { name: DAILY_ETO_COEFF,  value: "0.5" }
            - { name: IRR_PENDING_MARGIN,  value: "5m" }
            - {name: DEDUPER_TTL, value: "60m"}
            - { name: TZ,               value: "Europe/Rome" }

            # OpenWeather (da Secret allegata)
            - name: OWM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: weather-owm
                  key: OWM_API_KEY

          volumeMounts:
            - name: sensors-config
              mountPath: /app/config/sensors-config.json
              subPath: sensors-config.json

      volumes:
        - name: sensors-config
          configMap: { name: sensors-config }
